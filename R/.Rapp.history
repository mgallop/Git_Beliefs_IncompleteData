plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
head(newpost)
head(m2)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- -0.3#
#
w1 <- X1old + rnorm(n,1,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 100#
a1belief <- rnorm(m,-0.3,0.1)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
delta <- mean(data$v1)#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	postbelief <- (delta*((1/relpibelief)-1))/(1-delta)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- -0.3#
#
w1 <- X1old + rnorm(n,1,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 100#
a1belief <- rnorm(m,-0.3,0.1)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
delta <- mean(data$v1)#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	postbelief <- (delta*((1/relpibelief)-1))/(1-delta)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
mean(v1change)
mean(data$v1)
mean(data$t1)
summary(postbelief)
postbelief
delta
relpibelief
pimatbelief
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- -0.3#
#
w1 <- X1old + rnorm(n,1,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 100#
a1belief <- rnorm(m,-0.3,0.1)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- -0.3#
#
w1 <- X1old + rnorm(n,1,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,-0.3,0.1)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
delta <- mean(data$v1)#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	postbelief <- (delta*((1/relpibelief)-1))/(1-delta)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
pimatbelief
postbelief
summary(postbelief)
summary(relpibelief)
delta
summary(1/relpibelief)
summary((1/relpibelief)-1)
	postbelief <- ((1-relpibelief)*(delta/relpibelief))/(((1-relpibelief)*(delta/relpibelief))+(1-(delta/relpibelief)))
summary(postbelief)
summary(delta/relpibelief)
.25/.5
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- -0.3#
#
w1 <- X1old + rnorm(n,1,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,-0.3,0.1)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
delta <- mean(data$v1)#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	pimean <- mean(relpibelief)#
	postbelief <- ((1-pimean)*(delta/pimean))/(((1-pimean)*(delta/pimean))+(1-(delta/pimean)))#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
	relpibelief <- pimatbelief[,i]
relpibelief
	gamma <- data$v1*relpibelief + (1-data$v1)*(1-relpibelief)
gamma
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)
postbelief
summary(postbelief)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- -0.3#
#
w1 <- X1old + rnorm(n,1,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,-0.3,0.1)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- data$v1*relpibelief + (1-data$v1)*(1-relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- -0.3#
#
w1 <- X1old + rnorm(n,1,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,-0.3,0.1)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- data$v1*relpibelief + (1-data$v1)*(1-relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
mean(v1change)
mean(data$v1)
mean(data$t1)
summary(m2)
mean(data$v1change)
cor(data$v1change,data$t1)
pihelpbelief
pibelief
cor(pibelief,pi)
postbelief
replace
cor(data$v1change,data$t1)
head(cbind(data$v1change,data$t1))
cbind(data$v1change,data$t1)
cor(w1,X1old )
plot(w1,data$t1)
X1old
plot(w1, X1old)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 3#
#
w1 <- X1old + rnorm(n,1,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,3,0.2)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- data$v1*relpibelief + (1-data$v1)*(1-relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 3#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,3,0.2)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- data$v1*relpibelief + (1-data$v1)*(1-relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
cor(v1change,data$t1)
cor(v1change,data$v1)
cor(data$t1,data$v1)
mean(data$t1)
mean(data$v1)
mean(data$v1change)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 3#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,3,0.2)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- data$v1*relpibelief + (1-data$v1)*(1-relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
mean(data$t1)
gamma
mean(gamma)
pibelief
mean(gamma)
mean(pimatbelief)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 3#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==0,0,replace)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,3,0.2)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- #
	gamma <- #
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
a1belief <- rnorm(m,3,0.2)
a1belief
a1belief <- rnorm(m,3,0)
a1belief
mean(data$v1)
mean(data$t1)
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}
pimatbelief
mean(data$t1)
mean(data$v1)
mean(pimatbelief)
mean(pi)
0.6* 0.7333744
1-(0.6* 0.7333744)
0.6*.27
.162+0.4+0.44
replace <- rbinom(n,1,pi)
mean(replace)
x1 <- ifelse(data$t1==0,0,replace)
mean(x1)
mean(data$t1)
mean(data$v1)
x1 <- ifelse(data$t1==1,replace,0)
mean(x1)
mean(pi)
x1 <- NULL#
for(i in 1:n){#
	replace <- ifelse(data$t1[i]==0,0,rbinom(1,1,pi[i]))#
	x1 <- c(x1,replace)#
}
mean(x1)
mean(pi)
x1 <- NULL#
for(i in 1:n){#
	replace <- ifelse(data$t1[i]==0,0,rbinom(1,1,mean(pi)))#
	x1 <- c(x1,replace)#
}
mean(x1)
replace <- rbinom(n,1,mean(pi))
x1 <- ifelse(data$t1==1,replace,0)
data$v1 <- x1
mean(x1)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 3#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,mean(pi))#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1
mean(x1)
mean(data$t1)
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)
0.56*0.73
0.9*0.7
0.63/0.7
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 3#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1
mean(data$v1)
mean(data$x1)
mean(data$t1)
mean(pi)
bla<-pi*data$t1
bla
cor(bla,data$v1)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 3#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,3,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- -3#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,-3,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 1#
a1 <- -3#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 1#
a1belief <- rnorm(m,-3,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 0#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))
pi
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,0,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}
pimatbelief
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/((1-relpibelief)*gamma + 1 - gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}
newpost <- as.data.frame(newpost)
mean(newpost$v1change)
gamma
mean(data$v1)
mean(data$t1)
relpibelief
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 0#
#
w1 <- X1old + rnorm(n,0,1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,0,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
mean(v1change)
mean(data$t1)
mean(data$v1)
cbind(v1change,data$t1)
cor(v1change,data$t1)
cor(v1change,data$v1)
cor(data$t1,data$v1)
postbelief
w1
plot(w1,X1old)
cor(w1,data$t1)
cor(w1,data$v1)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- X1old + rnorm(n,0,.1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
pi
pimatbelief
pibelief
plot(pi, pibelief)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- X1old + rnorm(n,0,.1)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	#replace <- rbinom(n,1,postbelief)#
	#v1change <- ifelse(data$v1==1,1,replace)#
	v1change <- ifelse(data$v1==1,1,postbelief)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- X1old + rnorm(n,0,0)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	#replace <- rbinom(n,1,postbelief)#
	#v1change <- ifelse(data$v1==1,1,replace)#
	v1change <- ifelse(data$v1==1,1,postbelief)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
v1change
corr(v1change,data$t1)
cor(v1change,data$t1)
cor(v1change,data$v1)
mean(v1change)
mean(data$t1)
mean(data$v1)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- X1old + rnorm(n,0,0)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	#replace <- rbinom(n,1,postbelief)#
	#v1change <- ifelse(data$v1==1,1,replace)#
	v1change <- ifelse(data$v1==1,1,postbelief)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=10)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- -0.4#
b3 <- 0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- X1old + rnorm(n,0,0)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	#v1change <- ifelse(data$v1==1,1,postbelief)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
cor(pi, pibelief)
gamma
mean(data$t1)
mean(data$v1)
relpibelief
mean(relpibelief)
mean(pi)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- X1old + rnorm(n,0,0)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	#v1change <- ifelse(data$v1==1,1,postbelief)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
gamma
mean(relpibelief)
mean(data$v1)
mean(data$t1)
plot(postbelief,data$t1)
plot(postbelief,data$v1)
plot(postbelief,data$t1)
plot(postbelief,data$v1)
table(data$t1,v1change)
table(data$v1,v1change)
.5*.3
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin#
X <- cbind(rnorm(n,1,1),X)#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: x1=0 if t1=0, if t1=1 then x1=1 w/ prob pi_i#
#
# model: logit(pi_1) = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- X1old + rnorm(n,0,0)#
pihelp <- a0 + a1*w1#
pi <- exp(pihelp)/(1+exp(pihelp))#
#
#
replace <- rbinom(n,1,pi)#
x1 <- ifelse(data$t1==1,replace,0)#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	pihelpbelief <- a0belief + a1belief[i]*w1#
	pibelief <- exp(pihelpbelief)/(1+exp(pihelpbelief))#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	gamma <- mean(data$v1)/mean(relpibelief)#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	#v1change <- ifelse(data$v1==1,1,postbelief)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}
gamma
mean(data$t1)
mean(data$v1)
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
newpost <- NULL#
#
for(i in 1:m){#
	relpibelief <- pimatbelief[,i]#
	# P(t=1 | x=0)#
	#gamma <- mean(data$v1)/mean(relpibelief)#
	gamma <- 0.6#
	postbelief <- ((1-relpibelief)*gamma)/(1-relpibelief*gamma)#
	replace <- rbinom(n,1,postbelief)#
	v1change <- ifelse(data$v1==1,1,replace)#
	#v1change <- ifelse(data$v1==1,1,postbelief)#
	data$v1change <- v1change#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Experimentation with Normal#
### Simon, 05/24/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: we add another normal m1#
#
# model: m1 = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- rnorm(n,0,1)#
m1 <- a0 + a1*w1#
#
x1 <- t1 + m1#
#
#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)
head(X)
### BELIEFS DATA QUALITY#
### Some experimentation#
### Simon, 05/19/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X1old <- X[,1]#
makebin <- ifelse(X[,1]>quantile(X[,1],0.4),1,0)#
X[,1] <- makebin
head(X)
### BELIEFS DATA QUALITY#
### Experimentation with Normal#
### Simon, 05/24/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X <- cbind(rnorm(n,1,1),X)#
#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: we add another normal m1#
#
# model: m1 = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- rnorm(n,0,1)#
m1 <- a0 + a1*w1#
#
x1 <- t1 + m1#
#
#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)
### BELIEFS DATA QUALITY#
### Experimentation with Normal#
### Simon, 05/24/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X <- cbind(rnorm(n,1,1),X)#
#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: we add another normal m1#
#
# model: m1 = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- rnorm(n,0,1)#
m1 <- a0 + a1*w1#
#
x1 <- data$t1 + m1#
data$v1 <- x1
cor(data$t1,data$v1)
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
pimatbelief <- NULL#
for(i in 1:m){#
	m1belief <- a0belief + a1belief[i]*w1#
	pimatbelief <- cbind(pimatbelief,pibelief)#
}
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
m1matbelief <- NULL#
for(i in 1:m){#
	m1belief <- a0belief + a1belief[i]*w1#
	m1matbelief <- cbind(m1matbelief,m1belief)#
}
cor(m1belief,m1)
i<-1
newpost <- NULL
	relm1belief <- m1matbelief[,i]
relm1belief
	v1change <- data$v1 - m1
cor(v1change,data$v1)
cor(v1change,data$t1)
### BELIEFS DATA QUALITY#
### Experimentation with Normal#
### Simon, 05/24/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X <- cbind(rnorm(n,1,1),X)#
#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: we add another normal m1#
#
# model: m1 = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- rnorm(n,0,1)#
m1 <- a0 + a1*w1#
#
x1 <- data$t1 + m1#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 1#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0)#
#
m1matbelief <- NULL#
for(i in 1:m){#
	m1belief <- a0belief + a1belief[i]*w1#
	m1matbelief <- cbind(m1matbelief,m1belief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relm1belief <- m1matbelief[,i]#
	v1change <- data$v1 - m1#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
m <- 100
a1belief <- rnorm(m,1,0.5)
plot(density(a1belief))
### BELIEFS DATA QUALITY#
### Experimentation with Normal#
### Simon, 05/24/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X <- cbind(rnorm(n,1,1),X)#
#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: we add another normal m1#
#
# model: m1 = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- rnorm(n,0,1)#
m1 <- a0 + a1*w1#
#
x1 <- data$t1 + m1#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0.5)#
#
m1matbelief <- NULL#
for(i in 1:m){#
	m1belief <- a0belief + a1belief[i]*w1#
	m1matbelief <- cbind(m1matbelief,m1belief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relm1belief <- m1matbelief[,i]#
	v1change <- data$v1 - m1#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
mean(newpost$v1change)#
#
plot(density(mtrue[,2]),xlim=c(0,3))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
head(newpost)
summary(mobs)
colnames(newpost)
colnames(newpost)[1]
output <- matrix(c("", "Mean", "SD", colnames(newpost)[1], mean(newpost[,1]), sqrt(var(newpost[,1])), colnames(newpost)[2], mean(newpost[,2]), sqrt(var(newpost[,2])), colnames(newpost)[3], mean(newpost[,3]), sqrt(var(newpost[,3])), colnames(newpost)[4], mean(newpost[,4]), sqrt(var(newpost[,4]))),ncol=3)
output
output <- matrix(c("", "Mean", "SD", colnames(newpost)[1], mean(newpost[,1]), sqrt(var(newpost[,1])), colnames(newpost)[2], mean(newpost[,2]), sqrt(var(newpost[,2])), colnames(newpost)[3], mean(newpost[,3]), sqrt(var(newpost[,3])), colnames(newpost)[4], mean(newpost[,4]), sqrt(var(newpost[,4]))),ncol=3,byrow=T)
output
summary(mtrue)
plot(density(mtrue[,2]),xlim=c(0,3))
lines(density(mobs[,2]),type="l",col="blue")
lines(density(newpost$v1change),type="l",col="red")
### BELIEFS DATA QUALITY#
### Experimentation with Normal#
### Simon, 05/24/12#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X <- cbind(rnorm(n,1,1),X)#
#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: we add another normal m1#
#
# model: m1 = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- rnorm(n,0,1)#
m1 <- a0 + a1*w1#
#
x1 <- data$t1 + m1#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0.5)#
#
m1matbelief <- NULL#
for(i in 1:m){#
	m1belief <- a0belief + a1belief[i]*w1#
	m1matbelief <- cbind(m1matbelief,m1belief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relm1belief <- m1matbelief[,i]#
	v1change <- data$v1 - m1#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
#
# regression output#
output <- matrix(c("", "Mean", "SD", colnames(newpost)[1], mean(newpost[,1]), sqrt(var(newpost[,1])), colnames(newpost)[2], mean(newpost[,2]), sqrt(var(newpost[,2])), colnames(newpost)[3], mean(newpost[,3]), sqrt(var(newpost[,3])), colnames(newpost)[4], mean(newpost[,4]), sqrt(var(newpost[,4]))),ncol=3,byrow=T)#
output#
#
#
plot(density(mtrue[,2]),xlim=c(0,4))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,4))
lines(density(mobs[,2]),type="l",col="blue")
lines(density(newpost$v1change),type="l",col="red")
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,5))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
#
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,10))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,9))#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")
plot(density(mtrue[,2]),xlim=c(0,3),main="Posterior of Coefficient of Interest")#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")#
legend("topright",c("True","Observed","Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,9),main="Posterior of Coefficient of Interest")#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")#
legend("topright",c("True","Observed","Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(w1,m1belief)
plot(w1,m1matbelief)
### BELIEFS DATA QUALITY#
### Experimentation with Normal#
### Simon, 05/24/12#
#
### In this example we take the true data t1 to be normally distributed and add another normally distributed variable m1 <- a0 + a1*w1, where w1 is the variable that determines the "false reporting". The observed variable is v1=t1+m1. I then assume that we know the true a0 (with certainty) and a1 (correct mean but some uncertainty). From this a distribution of m1 (m1hat) is constructed and then the "expected" t1 is computed: t1hat=v1-m1hat. At the end we see that the coefficient b1 we care about is biased when v1 is taken at face value but not when we correct using the correct beliefs.#
#
rm(list=ls(all=TRUE))#
#
library(MASS)#
library(MCMCpack)#
#
### CREATE DATA SET#
# model: y= b0 + b1 t1 + b2 x2 + b3 x3 + e#
# t1 is binomial and is the true values#
#
n <- 1000#
#
# Design matrix X#
#
#correlations between the variables#
corr12 <- 0.3#
corr13 <- 0.8#
corr23 <- -0.2#
#
mu <- c(1,-4,3)#
Sigma <- matrix(c(1,corr12,corr13,corr12,1,corr23,corr13,corr23,1),3,3)#
#
X <- mvrnorm(n, mu, Sigma)#
X <- cbind(rnorm(n,1,1),X)#
#
#
# Dependent Variable Y#
#
# the regression coefficients#
b1 <- 2#
b2 <- 0.4#
b3 <- -0.2#
#
Y <- X[,1] + b1*X[,2] + b2*X[,3] + b3*X[,4] + rnorm(n,0,1)#
#
data <- cbind(Y,X[,2],X[,3],X[,4])#
colnames(data) <- c("dv","t1","v2","v3")#
data <- as.data.frame(data)#
#
#
## x1 is realization of t1: we add another normal m1#
#
# model: m1 = a0 + a1 w1#
a0 <- 0#
a1 <- 1#
#
w1 <- rnorm(n,0,1)#
m1 <- a0 + a1*w1#
#
x1 <- data$t1 + m1#
data$v1 <- x1#
#
#
mtrue <- MCMCregress(dv ~ 1 + t1 + v2 + v3, data=data)#
summary(mtrue)#
#
mobs <- MCMCregress(dv ~ 1 + x1 + v2 + v3, data=data)#
summary(mobs)#
#
#
### QUANTIFY BELIEFS ABOUT X1#
# pi_i = probability x1=1 if t1=1#
# model: logit(pi_1) = a0 + a1 w1#
#
# length of the vector of beliefs on a0, a1#
m <- 100#
#
# here we get it right for a0 and have the right mean for a1#
a0belief <- 0#
a1belief <- rnorm(m,1,0.5)#
#
m1matbelief <- NULL#
for(i in 1:m){#
	m1belief <- a0belief + a1belief[i]*w1#
	m1matbelief <- cbind(m1matbelief,m1belief)#
}#
#
#
### CHANGING X1 ACCORDING TO BELIEFS#
#
newpost <- NULL#
#
for(i in 1:m){#
	relm1belief <- m1matbelief[,i]#
	v1change <- data$v1 - m1#
	m2 <- MCMCregress(dv ~ 1 + v1change + v2 + v3, data=data, burnin=1000, mcmc=5000, thin=50)#
	newpost <- rbind(newpost,m2)#
}#
#
newpost <- as.data.frame(newpost)#
#
# regression output#
output <- matrix(c("", "Mean", "SD", colnames(newpost)[1], mean(newpost[,1]), sqrt(var(newpost[,1])), colnames(newpost)[2], mean(newpost[,2]), sqrt(var(newpost[,2])), colnames(newpost)[3], mean(newpost[,3]), sqrt(var(newpost[,3])), colnames(newpost)[4], mean(newpost[,4]), sqrt(var(newpost[,4]))),ncol=3,byrow=T)#
output#
#
#
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,9),main="Posterior of Coefficient of Interest")#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")#
legend("topright",c("True","Observed","Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,9),main="Posterior of Coefficient of Interest")#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
quartz("",15,5)#
layout(cbind(1,2,3))#
layout.show(3)
head(newpost)
plot(density(mtrue[,3]),xlim=c(0,3),ylim=c(0,9),main="Posterior of V2")#
lines(density(mobs[,3]),type="l",col="blue")#
lines(density(newpost$v2),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(density(mtrue[,3]),xlim=c(0,3),ylim=c(0,9),main="Posterior of V2")#
lines(density(mobs[,3]),type="l",col="blue")#
lines(density(newpost$v2),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(density(mtrue[,4]),xlim=c(0,3),ylim=c(0,9),main="Posterior of V3")#
lines(density(mobs[,4]),type="l",col="blue")#
lines(density(newpost$v3),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(density(mtrue[,4]),xlim=c(-1,2),ylim=c(0,7),main="Posterior of V3")#
lines(density(mobs[,4]),type="l",col="blue")#
lines(density(newpost$v3),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(density(mtrue[,3]),xlim=c(0,3),ylim=c(0,8),main="Posterior of V2")#
lines(density(mobs[,3]),type="l",col="blue")#
lines(density(newpost$v2),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(density(mtrue[,3]),xlim=c(0,2),ylim=c(0,8),main="Posterior of V2")#
lines(density(mobs[,3]),type="l",col="blue")#
lines(density(newpost$v2),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
plot(density(mtrue[,4]),xlim=c(-1,2),ylim=c(0,7),main="Posterior of V3")#
lines(density(mobs[,4]),type="l",col="blue")#
lines(density(newpost$v3),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
quartz("",5,15)#
layout(rbind(1,2,3))#
layout.show(3)
# plotting and comparing 3 coefficients#
quartz("",5,8)#
layout(rbind(1,2,3))#
layout.show(3)#
#
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,9),main="Posterior of Coefficient of Interest")#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))#
#
plot(density(mtrue[,3]),xlim=c(0,2),ylim=c(0,8),main="Posterior of V2")#
lines(density(mobs[,3]),type="l",col="blue")#
lines(density(newpost$v2),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))#
#
plot(density(mtrue[,4]),xlim=c(-1,2),ylim=c(0,7),main="Posterior of V3")#
lines(density(mobs[,4]),type="l",col="blue")#
lines(density(newpost$v3),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
# plotting and comparing 3 coefficients#
quartz("",5,8)#
layout(rbind(1,2,3))#
layout.show(3)#
#
plot(density(mtrue[,2]),xlim=c(0,3),ylim=c(0,9),main="Posterior of Coefficient of Interest")#
lines(density(mobs[,2]),type="l",col="blue")#
lines(density(newpost$v1change),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))#
#
plot(density(mtrue[,3]),xlim=c(0,2),ylim=c(0,8),main="Posterior of V2")#
lines(density(mobs[,3]),type="l",col="blue")#
lines(density(newpost$v2),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))#
#
plot(density(mtrue[,4]),xlim=c(-1,3),ylim=c(0,7),main="Posterior of V3")#
lines(density(mobs[,4]),type="l",col="blue")#
lines(density(newpost$v3),type="l",col="red")#
legend("topright",c("True","Observed","Correct Belief"),col=c("black","blue","red"),lty=c(1,1,1))
